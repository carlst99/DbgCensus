import{_ as i,c as a,o as n,af as e}from"./chunks/framework.B6SQUEf8.js";const g=JSON.parse('{"title":"Setup","description":"","frontmatter":{},"headers":[],"relativePath":"eventstream/index.md","filePath":"eventstream/index.md"}'),t={name:"eventstream/index.md"};function l(h,s,p,r,k,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to “Setup”">​</a></h1><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>Check out the <a href="https://github.com/carlst99/DbgCensus/tree/main/Samples/EventStreamSample" target="_blank" rel="noreferrer">Event Streaming Sample</a> as you read through this guide.</p><p>It&#39;s recommended that you use a template that wires up the <a href="https://docs.microsoft.com/en-us/dotnet/core/extensions/generic-host" target="_blank" rel="noreferrer">Generic Host</a>, such as a <em>Worker Service</em> or an <em>ASP.NET Core</em> project.</p></div><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>There are two <code>DbgCensus.*</code> packages available for assisting with event streaming.</p><ul><li><p><code>DbgCensus.EventStream</code> is the base library. It contains event stream types and a client websocket implementation. However, it does not handle events and you must implement the abstract <code>BaseEventStreamClient</code> class to do so.</p></li><li><p><code>DbgCensus.EventStream.EventHandlers</code> builds off the base library to add an asynchronous event dispatch system and niceties like automatic subscription refreshing. The majority of the event streaming documentation will assume that you are using this package.</p></li></ul></div><ol><li><p>Install <code>DbgCensus.EventStream.EventHandlers</code>:</p><div class="language-powershell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;"># Visual Studio Package Manager</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;">Install-Package</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> DbgCensus.EventStream.EventHandlers</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;"># dotnet console</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">dotnet add package DbgCensus.EventStream.EventHandlers</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>Register the required types to an <code>IServiceCollection</code> with the <code>AddCensusEventHandlingServices</code> extension method. If you aren&#39;t using <code>Microsoft.Extensions.DependencyInjection</code>, take a look at <a href="https://github.com/carlst99/DbgCensus/blob/main/DbgCensus.EventStream.EventHandlers/Extensions/IServiceCollectionExtensions.cs" target="_blank" rel="noreferrer">this file</a> to see how the required services are setup.</p></li><li><p>Configure an instance of the <code>EventStreamOptions</code> class to ensure that your service ID is utilised. Typically, you&#39;d register your options from a configuration source (such as a section of <code>appsettings.json</code>) to retrieve any secrets that shouldn&#39;t be stored with the code (i.e. - the service ID!), and then follow up with any additional runtime configuration. You might also want to configure the <code>EventHandlingClientOptions</code> class to customise the automatic subscription refresh interval.</p></li></ol><p><strong>Example</strong></p><p>You&#39;ll note here that we&#39;re adding various <em>handlers</em>. They&#39;ll be explained in more detail later.</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">using</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> DbgCensus</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">EventStream</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">using</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> DbgCensus</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">EventStream</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">EventHandlers</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Extensions</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">using</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> EventStreamSample</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">EventHandlers</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">using</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> Microsoft</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Extensions</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">DependencyInjection</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">using</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> Microsoft</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Extensions</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Hosting</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">using</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Threading</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Tasks</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">namespace</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> EventStreamSample</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">public</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> static</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> Program</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    public</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> static</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> async</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> Task</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> Main</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[] </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    {</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">        IHost</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> host</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> Host</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">CreateDefaultBuilder</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">ConfigureServices</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">((</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">hostContext</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">services</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">) =&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">                services</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Configure</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">EventStreamOptions</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">hostContext</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">Configuration</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">GetSection</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(nameof(</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">EventStreamOptions</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)));</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">                services</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">AddCensusEventHandlingServices</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line highlighted"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                        .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">RegisterPreDispatchHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">DuplicatePreventionPreDispatchHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;()</span></span>
<span class="line highlighted"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                        .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">AddPayloadHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">ConnectionStateChangedPayloadHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;()</span></span>
<span class="line highlighted"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                        .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">AddPayloadHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">FacilityControlPayloadHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;()</span></span>
<span class="line highlighted"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                        .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">AddPayloadHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">UnknownPayloadHandler</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;();</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            })</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Build</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">();</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            </span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">         await </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">host</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">RunAsync</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">();</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="running-the-client" tabindex="-1">Running the Client <a class="header-anchor" href="#running-the-client" aria-label="Permalink to “Running the Client”">​</a></h2><p>TODO: Retrieve instance from factory. Run client task.</p><h2 id="the-big-todo" tabindex="-1">The big TODO <a class="header-anchor" href="#the-big-todo" aria-label="Permalink to “The big TODO”">​</a></h2><p>Please peruse the <a href="https://github.com/carlst99/DbgCensus/tree/main/Samples/EventStreamSample" target="_blank" rel="noreferrer">Event Streaming Sample</a> in the meantime.</p><p>TODO:</p><ul><li>All about handlers</li><li>Pre-dispatch handlers <ul><li>Pre-dispatch handlers all run in the same scope per event, whereas payload handlers each have their own scope</li></ul></li></ul>`,13)]))}const c=i(t,[["render",l]]);export{g as __pageData,c as default};
