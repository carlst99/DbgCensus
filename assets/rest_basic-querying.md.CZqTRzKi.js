import{_ as i,c as a,o as n,af as e}from"./chunks/framework.B6SQUEf8.js";const A=JSON.parse('{"title":"Performing Queries","description":"","frontmatter":{},"headers":[],"relativePath":"rest/basic-querying.md","filePath":"rest/basic-querying.md"}'),l={name:"rest/basic-querying.md"};function t(h,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="performing-queries" tabindex="-1">Performing Queries <a class="header-anchor" href="#performing-queries" aria-label="Permalink to “Performing Queries”">​</a></h1><h2 id="components-of-a-query" tabindex="-1">Components of a Query <a class="header-anchor" href="#components-of-a-query" aria-label="Permalink to “Components of a Query”">​</a></h2><h3 id="iquerybuilder" tabindex="-1">IQueryBuilder <a class="header-anchor" href="#iquerybuilder" aria-label="Permalink to “IQueryBuilder”">​</a></h3><p>This is the meat of any query. The <code>IQueryBuilder</code> represents a fluent interface for designing a valid query URL that can then be used with an <code>ICensusRestClient</code>, or any alternative means, to retrieve data from the Census query endpoints.</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">IQueryBuilder</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> myQuery</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> new </span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">QueryBuilder</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">WithServiceId</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;example&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">OnCollection</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;outfit&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Where</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;alias.first_lower&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">SearchModifier</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">Equals</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">myOutfitTag</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">ToLower</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Uri</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> queryEndpoint</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> myQuery</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">ConstructEndpoint</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="iquerybuilderfactory" tabindex="-1">IQueryBuilderFactory <a class="header-anchor" href="#iquerybuilderfactory" aria-label="Permalink to “IQueryBuilderFactory”">​</a></h3><p>The <code>IQueryBuilderFactory</code> interface, and its default implementation, provide the means to retrieve an <code>IQueryBuilder</code> instance that is preconfigured according to the registered <code>CensusQueryOptions</code>.</p><p>As such, it is recommended that you only create instances of an <code>IQueryBuilder</code> through this factory, as you won&#39;t have to set your service ID every time and can take advantage of having a default query language and <code>limit</code>.</p><h3 id="icensusrestclient" tabindex="-1">ICensusRestClient <a class="header-anchor" href="#icensusrestclient" aria-label="Permalink to “ICensusRestClient”">​</a></h3><p>The <code>ICensusRestClient</code> interface provides functions to perform queries on the Census REST API, and deserialize the response. The default implementation also checks the response for errors and un-nests the actual data, allowing your data model to map exactly to the collection structure.</p><h2 id="making-a-query" tabindex="-1">Making a Query <a class="header-anchor" href="#making-a-query" aria-label="Permalink to “Making a Query”">​</a></h2><ol><li><p>Begin by injecting an <code>IQueryService</code> instance. This is a wrapper around the most common functions of the <code>IQueryBuilderFactory</code> and <code>ICensusRestClient</code> interfaces that were discussed earlier.</p></li><li><p>Call the <code>CreateQuery</code> method on the <code>IQueryService</code> instance, and define your query. Usually, it&#39;s easiest to build and test your query URL beforehand by making manual calls to the API, and then translate it.</p></li><li><p>Call the <code>GetAsync</code> method on the <code>IQueryService</code> instance, and pass the query you want to retrieve. Note that the result of this call can be null if you&#39;ve made a query for a singular item that doesn&#39;t exist.</p></li></ol><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">public</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> record</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> CharacterMinified</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    ulong</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> CharacterId</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">    Name</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> Name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">    FactionDefinition</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> FactionId</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    int</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> PrestigeLevel</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">public</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> RestExample</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    private</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> readonly</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> ILogger</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">RestExample</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; </span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">_logger</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    private</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> readonly</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> IQueryService</span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;"> _queryService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    public</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> RestExample</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">ILogger</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">RestExample</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">logger</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">IQueryService</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> queryService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">        _logger</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> logger</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">        _queryService</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> queryService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    public</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> async</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> Task</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">CharacterMinified</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">?&gt; </span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">GetCharacter</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">string</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    {</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">        IQueryBuilder</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> query</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> _queryService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">CreateQuery</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">OnCollection</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;character&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Where</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;name.first_lower&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">SearchModifier</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">Equals</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">ToLower</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">())</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            .</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Show</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;character_id&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;name&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;faction_id&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;prestige_level&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">        try</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        {</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">            CharacterMinified</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">? </span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">character</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> await </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">_queryService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">GetAsync</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">CharacterMinified</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;(</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">query</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">ct</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">).</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">ConfigureAwait</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">false</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">            if</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">character</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> is </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">null</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">                _logger</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">LogInformation</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;That character does not exist.&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">            return</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> character</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        }</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">        catch</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> (</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">Exception</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> ex</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        {</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">            _logger</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">LogError</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">ex</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;Failed to retrieve character.&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">            return</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> null</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>An important distinction to notice when defining queries is that filtering a property is split into two methods. If you&#39;d like to filter a property by a singular value, use the <code>Where</code> method:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">query</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Where</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;property&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">SearchModifier</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">LessThan</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;value&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>If you&#39;d like to filter a property by multiple values, use the <code>WhereAll</code> method:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">int</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[] </span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">values</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> new[] { </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">2</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">3</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> };</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">query</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">WhereAll</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;property&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">SearchModifier</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">Equals</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">values</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h2 id="retrieving-collection-counts" tabindex="-1">Retrieving collection counts <a class="header-anchor" href="#retrieving-collection-counts" aria-label="Permalink to “Retrieving collection counts”">​</a></h2><p>There is a shortcut for the <code>count</code> verb on the <code>ICensusRestClient</code> interface. It accepts either a query, or a raw collection name, and directly returns the Census count value.</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">ICensusRestClient</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> client</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ...;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">ulong</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> count</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> await </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">client</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">CountAsync</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;character&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">ct</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="retrieving-distinct-field-values" tabindex="-1">Retrieving distinct field values <a class="header-anchor" href="#retrieving-distinct-field-values" aria-label="Permalink to “Retrieving distinct field values”">​</a></h2><p>There is a shortcut for the <code>c:distinct</code> parameter on the <code>ICensusRestClient</code> interface which directly returns the list of unique values, preventing you from having to define a custom model for the response.</p><p>The generic type argument of the method should match the model of the field you are querying.</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes one-dark-pro one-light" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">ICensusRestClient</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;"> client</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ...;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">IReadOnlyList</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">int</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;? </span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">distinctValues</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> await </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">client</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">DistinctAsync</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">int</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;item&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;max_stack_size&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;">ct</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,21)]))}const c=i(l,[["render",t]]);export{A as __pageData,c as default};
